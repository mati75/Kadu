Description: Work around loss of Facebook groups when upgrading
 from 0.10.1-0.11.x
Author: Bartosz Brachaczek <b.brachaczek@gmail.com>
---
diff --git a/ChangeLog b/ChangeLog
index 23ae0d4..05bbb71 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,3 +1,6 @@
++++ version 0.12.3
+* jabber: fixed Facebook contacts groups being lost when upgrading from 0.10.x/0.11.x (beevvy)
+
 +++ version 0.12.2
 * core: fixed every new profile of Kadu being lost on Windows (regression since 0.11.x) (beevvy)
 * qt: ship more stable version of Qt on Windows (beevvy)
diff --git a/kadu-core/contacts/contact-shared.cpp b/kadu-core/contacts/contact-shared.cpp
index 4d7b2c1..2449401 100644
--- a/kadu-core/contacts/contact-shared.cpp
+++ b/kadu-core/contacts/contact-shared.cpp
@@ -110,7 +110,18 @@ void ContactShared::load()
 		Entry->setState(RosterEntryDesynchronized);
 	else
 		Entry->setState(RosterEntrySynchronized);
-	Entry->setDetached(loadValue<bool>("Detached", false));
+
+	// It's an explicit hack for update path from 0.10.1-0.11.x to 0.12+. 0.10/0.11 didn't
+	// have Detached property. But they did have an explicit hack for totally ignoring
+	// what Facebook says about groups, thus allowing users to place their Facebook contacts
+	// in groups in Kadu. And without below hack all this group information is overriden
+	// by useless a Facebook-provided group until we try to upload something to roster
+	// for the first time, we fail and only then we set Detached to true, when group
+	// information is already lost.
+	if (!hasValue("Detached"))
+		Entry->setDetached(Id.endsWith(QLatin1String("@chat.facebook.com")));
+	else
+		Entry->setDetached(loadValue<bool>("Detached", false));
 
 	*ContactAccount = AccountManager::instance()->byUuid(loadValue<QString>("Account"));
 	doSetOwnerBuddy(BuddyManager::instance()->byUuid(loadValue<QString>("Buddy")));
@@ -147,6 +158,7 @@ void ContactShared::store()
 	storeValue("Priority", Priority);
 
 	storeValue("Dirty", RosterEntrySynchronized != Entry->state());
+	// Detached property needs to be always stored, see the load() method.
 	storeValue("Detached", Entry->detached());
 
 	storeValue("Account", ContactAccount->uuid().toString());
-- 
1.7.10

